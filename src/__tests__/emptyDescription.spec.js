import { expect, test, describe } from 'vitest'
import { regexEmptyDescription } from '../regex'

describe('Empty Description', () => {
  test("not", () => {
    expect("Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs() documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs(foo) documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs () documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs (foo) documentation".match(regexEmptyDescription)).toBeNull()

    expect("docs: Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs!: Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs!foo: Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docsfoo!: Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docsfoo!foo: Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs(foo): Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs(foo)!: Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs(): Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs()!: Update documentation".match(regexEmptyDescription)).toBeNull()

    expect("docs:Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs!:Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs!foo:Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docsfoo!:Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docsfoo!foo:Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs(foo):Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs(foo)!:Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs():Update documentation".match(regexEmptyDescription)).toBeNull()
    expect("docs()!:Update documentation".match(regexEmptyDescription)).toBeNull()
  })
  
  test("match", () => {
    expect("docs:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs():".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs()!:".match(regexEmptyDescription)?.groups?.position).toBe('')

    expect("docs()! :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs() !:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs() ! :`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs(foo) :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs(foo)! :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs(foo) !:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs(foo) ! :`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs(foo foo) :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs(foo foo)! :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs(foo foo) !:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs(foo foo) ! :`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs()!foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs()foo!:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs()foo!foo:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs(foo)foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs(foo)!foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs(foo)foo!:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs(foo)foo!foo:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs(foo foo)foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs(foo foo)!foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs(foo foo)foo!:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs(foo foo)foo!foo:`.match(regexEmptyDescription)?.groups?.position).toBe('')

    expect("docs ()! :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs () !:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs () ! :`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs (foo) :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs (foo)! :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs (foo) !:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs (foo) ! :`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs (foo foo) :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs (foo foo)! :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs (foo foo) !:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs (foo foo) ! :`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs ()!foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs ()foo!:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs ()foo!foo:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs (foo)foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs (foo)!foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs (foo)foo!:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs (foo)foo!foo:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs (foo foo)foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docs (foo foo)!foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs (foo foo)foo!:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docs (foo foo)foo!foo:`.match(regexEmptyDescription)?.groups?.position).toBe('')
  
    expect("docsfooo() :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo()! :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo() !:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo() ! :`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo(foo) :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo(foo)! :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo(foo) !:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo(foo) ! :`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo(foo foo) :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo(foo foo)! :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo(foo foo) !:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo(foo foo) ! :`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo()foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo()!foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo()foo!:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo()foo!foo:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo(foo)foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo(foo)!foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo(foo)foo!:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo(foo)foo!foo:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo(foo foo)foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo(foo foo)!foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo(foo foo)foo!:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo(foo foo)foo!foo:`.match(regexEmptyDescription)?.groups?.position).toBe('')

    expect("docsfooo () :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo () :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo ()! :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo () !:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo () ! :`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo (foo) :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo (foo)! :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo (foo) !:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo (foo) ! :`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo (foo foo) :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo (foo foo)! :".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo (foo foo) !:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo (foo foo) ! :`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo ()foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo ()foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo ()!foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo ()foo!:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo ()foo!foo:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo (foo)foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo (foo)!foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo (foo)foo!:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo (foo)foo!foo:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo (foo foo)foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect("docsfooo (foo foo)!foo:".match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo (foo foo)foo!:`.match(regexEmptyDescription)?.groups?.position).toBe('')
    expect(`docsfooo (foo foo)foo!foo:`.match(regexEmptyDescription)?.groups?.position).toBe('')

    expect("docs: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs(): ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs()!: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')

    expect("docs()! : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs() !: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs() ! : `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs(foo) : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs(foo)! : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs(foo) !: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs(foo) ! : `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs(foo foo) : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs(foo foo)! : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs(foo foo) !: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs(foo foo) ! : `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs()!foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs()foo!: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs()foo!foo: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs(foo)foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs(foo)!foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs(foo)foo!: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs(foo)foo!foo: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs(foo foo)foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs(foo foo)!foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs(foo foo)foo!: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs(foo foo)foo!foo: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')

    expect("docs ()! : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs () !: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs () ! : `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs (foo) : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs (foo)! : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs (foo) !: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs (foo) ! : `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs (foo foo) : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs (foo foo)! : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs (foo foo) !: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs (foo foo) ! : `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs ()!foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs ()foo!: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs ()foo!foo: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs (foo)foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs (foo)!foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs (foo)foo!: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs (foo)foo!foo: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs (foo foo)foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docs (foo foo)!foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs (foo foo)foo!: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docs (foo foo)foo!foo: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
  
    expect("docsfooo() : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo()! : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo() !: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo() ! : `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo(foo) : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo(foo)! : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo(foo) !: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo(foo) ! : `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo(foo foo) : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo(foo foo)! : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo(foo foo) !: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo(foo foo) ! : `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo()foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo()!foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo()foo!: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo()foo!foo: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo(foo)foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo(foo)!foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo(foo)foo!: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo(foo)foo!foo: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo(foo foo)foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo(foo foo)!foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo(foo foo)foo!: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo(foo foo)foo!foo: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')

    expect("docsfooo () : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo () : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo ()! : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo () !: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo () ! : `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo (foo) : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo (foo)! : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo (foo) !: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo (foo) ! : `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo (foo foo) : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo (foo foo)! : ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo (foo foo) !: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo (foo foo) ! : `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo ()foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo ()foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo ()!foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo ()foo!: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo ()foo!foo: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo (foo)foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo (foo)!foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo (foo)foo!: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo (foo)foo!foo: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo (foo foo)foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect("docsfooo (foo foo)!foo: ".match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo (foo foo)foo!: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
    expect(`docsfooo (foo foo)foo!foo: `.match(regexEmptyDescription)?.groups?.position).toBe(' ')
  })
})
